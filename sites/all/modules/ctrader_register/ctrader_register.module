<?php


/**
 * Implements hook_module_implements_alter()
 *
 * In this case needs for set ctrader_register form_alter after all others form_alters.
 */
function ctrader_register_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'form_alter') {
    // Move our hook implementation to the bottom.
    if (isset($implementations['ctrader_register'])) {
      $group = $implementations['ctrader_register'];
      unset($implementations['ctrader_register']);
      $implementations['ctrader_register'] = $group;
    }
  }
}


/**
 * Implements hook_init().
 */
function ctrader_register_init() {
  $path = $_GET['q'];
  if (strpos($path, 'user/register') !== FALSE) {
    drupal_add_css(drupal_get_path('module', 'ctrader_register') . '/css/ctrader-register.css');
    _ctrader_map_prepare_neighbourhoods_json();
  }
}


/**
 * Implements hook_form_FORM_ID_alter() for the registration form.
 */
function ctrader_register_form_user_register_form_alter(&$form, &$form_state) {
  $form['#attached']['js'][] = drupal_get_path('module', 'ctrader_register') . '/js/ctrader-register.js';

  $form['#attached']['js'][] = libraries_get_path('leaflet') . '/leaflet-src.js';
  $form['#attached']['css'][] = libraries_get_path('leaflet') . '/leaflet.css';

  $form['#attached']['js'][] = libraries_get_path('Leaflet.draw') . '/dist/leaflet.draw.js';
  $form['#attached']['css'][] = libraries_get_path('Leaflet.draw') . '/dist/leaflet.draw.css';

  $form['#attached']['js'][] = libraries_get_path('leaflet_markercluster') . '/dist/leaflet.markercluster.js';
  $form['#attached']['css'][] = libraries_get_path('leaflet_markercluster') . '/dist//dist/MarkerCluster.css';
  $form['#attached']['css'][] = libraries_get_path('leaflet_markercluster') . '/dist/MarkerCluster.Default.css';

  $form['account']['mail']['#title'] = t('E-mail address');
  $form['field_looking_to'][LANGUAGE_NONE]['#options']['_none'] = t('Choose @dots', array('@dots' => '...'));
  $form['field_mobile_phone_number'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder'] = t('example: @number', array('@number' => '555-777-9999'));
  $form['actions']['submit']['#value'] = t('Sign up');
  unset($form['account']['mail']['#description']);
  unset($form['account']['pass']['#description']);
  $form['form_map'] = array(
    '#type' => 'item',
    '#markup' => '<div id="mapid"></div>',
    '#weight' => 1,
  );
  $form['#prefix'] = "<div class='register-form-title''>
                          <h1><span>sign up</span> for free</h1>
                          <p>
                            Etiam suscipit tellus condimentum purus blandit, sed porttitor justo tristique.
                            Maecenas eleifend lorem porta, placerat elit non, auctor nulla!
                            Suspendisse et mi vel tellus fermentum dapibus.
                            Vivamus ullamcorper nibh nec neque malesuada placerat?
                          </p>
                      </div>";

  //Have created left and right containersto reaarange form items.
  $form['sign_up_left'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array (
        'sign_up_left',
      ),
    ),
  );

  $form['sign_up_right'] = array(
    '#type' => 'container',
    '#attributes' => array(
      'class' => array (
        'sign_up_right',
      ),
    ),
  );
  
  // Unset field_mobile_phone_number placeholder.
  unset($form['field_mobile_phone_number'][LANGUAGE_NONE][0]['value']['#attributes']['placeholder']);

  //Have added iems to containers.
  $form['sign_up_left']['user_first_name'] = $form['field_user_first_name'];
  $form['sign_up_left']['user_last_name'] = $form['field_user_last_name'];
  $form['sign_up_left']['user_mail'] = $form['account']['mail'];
  $form['sign_up_left']['user_mail']['#weight'] = 10;
  $form['sign_up_left']['user_tel'] = $form['field_mobile_phone_number'];
  $form['sign_up_left']['user_tel']['#weight'] = 12;
  $form['sign_up_left']['user_pass'] = $form['account']['pass'];
  $form['sign_up_left']['user_pass']['#weight'] = 14;
  $form['sign_up_left']['user_looking'] = $form['field_looking_to'];
  $form['sign_up_left']['user_looking']['#weight'] = 16;
  $form['sign_up_left']['user_terms'] = $form['terms_of_use'];
  $form['sign_up_left']['user_terms']['#weight'] = 18;
  $form['sign_up_left']['user_newsletters'] = $form['field_receive_newsletters'];
  $form['sign_up_left']['user_newsletters']['#weight'] = 20;
  $form['sign_up_left']['user_submit'] = $form['actions'];

  $form['sign_up_right']['user_region'] = $form['field_user_region'];
  $form['sign_up_right']['user_map'] = $form['form_map'];

  //Unset old items.
  unset($form['field_user_first_name']);
  unset($form['field_user_last_name']);
  unset($form['account']['mail']);
  unset($form['account']['pass']);
  unset($form['terms_of_use']);
  unset($form['actions']);
  unset($form['field_user_region']);
  unset($form['form_map']);
  unset($form['field_mobile_phone_number']);
  unset($form['field_looking_to']);
  unset($form['field_receive_newsletters']);

//  $form['terms'] = array(
//    '#type' => 'checkbox',
//    '#title' => t("I agree with the website's terms and conditions."),
//    '#required' => TRUE,
//    '#weight' => 20,
//  );
}


/**
 * Implements hook_element_info_alter().
 *
 *
 * Disable password strength checker.
 * Disable Drupal's built in password strength checker on the user
 * registration and user edit forms. Coder originally taken from
 * http://www.drupalcoder.com/story/409-disabling-password-check-in-drupal-6
 * https://www.drupal.org/project/disablepwstrength
 *
 */
function ctrader_register_element_info_alter(&$types) {
  if (isset($types['password_confirm']['#process']) && (($position = array_search('user_form_process_password_confirm', $types['password_confirm']['#process'])) !== FALSE)) {
    unset($types['password_confirm']['#process'][$position]);
  }
}


