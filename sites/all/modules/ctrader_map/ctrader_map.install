<?php

/**
 * @file
 * Install, update, and uninstall functions for the ctrader_map module.
 */


/**
 * Change taxonomy field value for every drealty_listing entity type.
 */
function ctrader_map_update_7000(&$sandbox) {
  if (!isset($_SESSION['neighbourhoods_terms_polygons_data'])) {
    $vid = taxonomy_vocabulary_machine_name_load('neighbourhoods'); //Neighbourhoods vocabulary.
    $vid = $vid->vid;
    $vocabulary_term_entities = taxonomy_get_tree($vid, 0, 3, TRUE);
    $terms_polygon = array();
    foreach ($vocabulary_term_entities as $tax_term) {
      $tax_term_id = $tax_term->tid;
      $polygon = isset($tax_term->field_community_geolocation[LANGUAGE_NONE][0]['geom']) ? $tax_term->field_community_geolocation[LANGUAGE_NONE][0]['geom'] : NULL;
      if ($polygon !== NULL && $polygon != 'GEOMETRYCOLLECTION EMPTY') {
        if (strrpos($tax_term->field_community_geolocation[LANGUAGE_NONE][0]['geom'], 'MULTIPOLYGON') === FALSE) {
          $polygon = $tax_term->field_community_geolocation[LANGUAGE_NONE][0]['geom'];
          $polygon = str_replace(array('POLYGON ', '(', ')'), '', $polygon);
          $polygon = explode(', ', $polygon);
        }
      }
      $terms_polygon[$tax_term_id] = $polygon;

      $polygon = NULL;
      $tax_term_id = NULL;
    }
    $_SESSION['neighbourhoods_terms_polygons_data'] = $terms_polygon;
  }

  $listings_per_pass = 10;
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_id'] = 0;
    $sandbox['max'] = db_select('drealty_listing', 'dl')
      ->fields('dl', array('id'))
      ->condition('type', 'toronto_condo')
      ->execute()
      ->rowCount();
  }

  $records = db_select('drealty_listing', 'dl')
    ->fields('dl', array('id'))
    ->condition('id', $sandbox['current_id'], '>')
    ->condition('type', 'toronto_condo')
    ->range(0, $listings_per_pass)
    ->orderBy('id')
    ->execute()
    ->fetchCol();

  if (!empty($records)) {
    $entities = entity_load(DREALTY_ENTITY_TYPE, array($records));
    foreach ($entities as $entity) {
      //Look: ctrader_map_entity_presave
      $entity->save();
    }
    $sandbox['current_id'] = end($records);
    $sandbox['progress'] += count($records);
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
    if ($sandbox['#finished'] >= 1) {
      $sandbox['#finished'] = 1;
      unset($_SESSION['neighbourhoods_terms_polygons_data']);
    }
  }

  // To display a message to the user when the update is completed, return it.
  // If you do not want to display a completion message, simply return nothing.
  return t('Changed taxonomy field value for every drealty_listing entity type.');

  // In case of an error, simply throw an exception with an error message.
  throw new DrupalUpdateException('Something went wrong.');
}
