<?php

/**
 * @file
 * A lightweight leads system for drealty.
 */

/**
 * Implements hook_entity_info().
 */
function drealty_lead_entity_info() {
  $entities = array();

  $entities['drealty_lead'] = array(
    'label' => t('Drealty Lead'),
    'plural label' => t('Drealty Leads'),
    'entity class' => 'DrealtyLead',
    'controller class' => 'DrealtyLeadController',
    'token type' => 'drealty_lead',
    'base table' => 'drealty_lead',
    'uri callback' => 'entity_class_uri',
    'exportable' => FALSE,
    'fieldable' => TRUE,
    'admin ui' => array(
      'path' => 'drealty_lead',
      'file' => 'includes/drealty_lead.lead.admin.inc',
      'controller class' => 'DrealtyLeadUIController',
      'menu wildcard' => '%drealty_lead',
    ),
    'bundles' => array(
      'drealty_lead' => array(
        'label' => 'Drealty Lead',
        'admin' => array(
          'path' => 'admin/drealty/drealty_lead/manage/drealty_lead',
          'bundle argument' => 4,
          'access arguments' => array('administer drealty_lead'),
        ),
      ),
    ),
    'entity keys' => array(
      'id' => 'id',
    ),
    'module' => 'drealty_lead',
    'access callback' => 'drealty_lead_access',
  );

  return $entities;
}

/**
 * Implements hook_menu().
 */
function drealty_lead_menu() {
  $items = array();
  $items['admin/drealty/drealty_lead'] = array(
    'title' => 'Drealty Leads',
    'description' => 'Manage the dRealty Lead System.',
    'page callback' => 'drealty_lead_some_function',
    'access arguments' => array('access drealty admin'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/drealty/drealty_lead/view'] = array(
    'title' => 'Edit Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implementation of hook_admin_paths_alter().
 * @param $paths
 */

function drealty_lead_admin_paths_alter(&$paths) {
  $paths['drealty_lead/add'] = TRUE;
  $paths['drealty_lead/add/*'] = TRUE;
  $paths['drealty_lead/*/edit'] = TRUE;
  $paths['drealty_lead/*/view'] = TRUE;
  $paths['drealty_lead/*'] = TRUE;
}

/**
 * @todo Do something awesome here!
 */
function drealty_lead_some_function() {
  return "something really cool";
}


/**
 * Implements hook_permission().
 */
function drealty_lead_permission() {
  $permissions = array(
    'administer drealty leads' => array(
      'title' => t('Administer dRealty Leads'),
    ),
    'view drealty leads' => array(
      'title' => t('View dRealty Leads'),
    ),
    'create drealty leads' => array(
      'title' => t('Create dRealty Leads'),
    ),
    'edit drealty leads' => array(
      'title' => t('Edit dRealty Leads'),
    ),
    'delete drealty leads' => array(
      'title' => t('Delete dRealty Leads'),
    ),
  );

  return $permissions;
}

/**
 * Access callback for drealty lead entities.
 */
function drealty_lead_access($op, $lead = NULL, $account = NULL) {
  if (!$account) {
    global $user;
    $account = $user;
  }

  if (user_access('administer drealty leads', $account)) {
    return TRUE;
  }

  if ($op == 'create' && user_access('create drealty leads', $account)) {
    return TRUE;
  }

  if ($op == 'edit' && user_access('edit drealty leads', $account) && $account->uid == $lead->field_drealty_lead_assigned_to['und'][0]['target_id']) {
    return TRUE;
  }

  if ($op == 'view' && user_access('view drealty leads', $account) && $account->uid == $lead->field_drealty_lead_assigned_to['und'][0]['target_id']) {
    return TRUE;
  }

  if ($op == 'delete' && user_access('delete drealty leads', $account) && $account->uid == $lead->field_drealty_lead_assigned_to['und'][0]['target_id']) {
    return TRUE;
  }

  return FALSE;
}

function drealty_lead_create($values = array()) {
  return entity_get_controller('drealty_lead')->create($values);
}

function drealty_lead_uri(DrealtyLead $lead) {
  return array('path' => 'drealty_lead/' . $lead->id);
}

/**
 * Implements hook_load().
 */
function drealty_lead_load($id, $conditions = array(), $reset = FALSE) {
  $ids = (isset($id) ? array($id) : array());
  $entity = drealty_lead_load_multiple($ids, $conditions, $reset);
  return $entity ? reset($entity) : FALSE;
}

function drealty_lead_load_multiple($ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('drealty_lead', $ids, $conditions, $reset);
}