<?php


function drealty_fieldmap_menu() {
  $items = array();

  $items['admin/drealty/connections/fieldmap/%/resource/%/%'] = array(
    'title' => 'Drealty Field Mapping',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('drealty_fieldmap_primary_form', 4, 6, 7),
    'access arguments' => array('access drealty admin'),
    'file' => 'includes/drealty_fieldmap.admin.inc',
    'type' => MENU_CALLBACK
  );

  return $items;
}

/**
 * Implements hook_theme().
 * @return array
 */
function drealty_fieldmap_theme() {
  return array(
    'drealty_fieldmap_rets_fields_options' => array(
      'render element' => 'form',
    ),
  );
}

function drealty_fieldmap_entity_presave($entity, $type) {
  if (in_array($type, array('drealty_listing'))) {
    $field_instances = field_info_instances($type, $entity->type);
    foreach ($field_instances as $instance) {
      $field = field_info_field($instance['field_name']);

//      Process TAXONOMY REFERENCE field
      if ($field && $field['type'] == 'taxonomy_term_reference') {
        $vocabulary = taxonomy_vocabulary_machine_name_load($field['settings']['allowed_values'][0]['vocabulary'])->vid;

        if (isset($entity->{$field['field_name']}) && count($entity->{$field['field_name']}) > 0) {
          foreach ($entity->{$field['field_name']}[LANGUAGE_NONE] as $ind => $data) {
            if (isset($data['value']) && !empty($data['value'])) {

              if ($field['cardinality'] == '-1') {  // If we have a multi-valued field
                $options_list = explode(',', $data['value']);
                unset($entity->{$field['field_name']}[LANGUAGE_NONE]); // Unset the current value

                foreach ($options_list as $option) {   // Loop through all the values / create-find the terms
                  $tax_term = taxonomy_get_term_by_name($option, $field['settings']['allowed_values'][0]['vocabulary']);
                  $tax_term = reset($tax_term);
                  if (!$tax_term || $tax_term == NULL) {
                    $tax_term = _drealty_fieldmap_create_taxonomy_terms($option, $vocabulary);
                  }
                  if ($tax_term && isset($tax_term->tid)) {
                    $entity->{$field['field_name']}[LANGUAGE_NONE][]['tid'] = $tax_term->tid;
                  }
                }
              }
              else { // else we have a single-valued field
                $tax_term = taxonomy_get_term_by_name($data['value'], $field['settings']['allowed_values'][0]['vocabulary']);
                $tax_term = reset($tax_term);
                if (!$tax_term || $tax_term == NULL) {
                  $tax_term = _drealty_fieldmap_create_taxonomy_terms($data['value'], $vocabulary);
                }
                if ($tax_term || isset($tax_term->tid)) {
                  unset($entity->{$field['field_name']}[LANGUAGE_NONE][$ind]);
                  $entity->{$field['field_name']}[LANGUAGE_NONE][$ind]['tid'] = $tax_term->tid;
                }
              }
            }
          }
        }
      }

//      Process LIST field ()
      if ($field && in_array($field['type'], array('list_text', 'list_integer'))) {
        if (isset($entity->{$field['field_name']}) && count($entity->{$field['field_name']}) > 0) {
          foreach ($entity->{$field['field_name']}[LANGUAGE_NONE] as $ind => $data) {
            if (isset($data['value']) && !empty($data['value'])) {
              $options_list = explode(',', $data['value']);

              if ($field['cardinality'] == '-1') {  // If we have a multi-valued field
                unset($entity->{$field['field_name']}[LANGUAGE_NONE]); // Unset the current value
                foreach ($options_list as $option) {   // Loop through all the values / create-find the terms
                  $entity->{$field['field_name']}[LANGUAGE_NONE][]['value'] = $option;
                }
              }
              else {
                if(!empty($options_list))
                  $entity->{$field['field_name']}[LANGUAGE_NONE][]['value'] = $options_list[0];
              }
            }
            if (isset($data['value']) && empty($data['value'])) {
              unset($entity->{$field['field_name']});
            }
          }
        }
      }

//      Process BOOLEAN field
      if ($field && in_array($field['type'], array('list_boolean'))) {
        if (isset($entity->{$field['field_name']}) && count($entity->{$field['field_name']}) > 0) {
          foreach ($entity->{$field['field_name']}[LANGUAGE_NONE] as $ind => $data) {
            if (isset($data['value']) && !is_numeric($data['value'])) {
              unset($entity->{$field['field_name']});
            }
          }
        }
      }
    }
  }
}

function _drealty_fieldmap_create_taxonomy_terms($name, $vid) {
  $tax_term = new stdClass();
  $tax_term->name = $name;
  $tax_term->vid = $vid;
  taxonomy_term_save($tax_term);
  return $tax_term;
}

/**
 * Implements hook_form_alter.
 *
 * Dynamically populate the list of available options for "field_rets_communities" field,
 * so that it contains the communities stored in the DB.
 */

function drealty_fieldmap_form_drealty_listing_edit_form_alter(&$form, &$form_state, $form_id) {
  $entity = $form_state['listing'];
  $field_instances = field_info_instances('drealty_listing', $entity->type);
  foreach ($field_instances as $instance) {
    $field = field_info_field($instance['field_name']);
    if (!empty($field) && in_array($field['type'], array('list_text', 'list_integer'))) {
      $field_name = $instance['field_name'];
      $form_field = $form[$field_name];

      $old_options = isset($form_field['und']['#options']) ? $form_field['und']['#options'] : array();
      if (count($old_options) > 1) {
        $options = array();

        $res = db_query("SELECT DISTINCT {$field_name}_value FROM field_data_{$field_name} ORDER BY {$field_name}_value");
        $db_name = $field_name . '_value';
        $options = array('_none' => t('- None -'));
        foreach ($res as $opt) {
          if (!empty($opt->{$db_name})) {
            $options[$opt->{$db_name}] = t($opt->{$db_name});
          }
        }

        $form[$field_name]['und']['#options'] = $options;
        $form[$field_name]['und']['#multiple'] = TRUE;
        if (!empty($entity->{$field_name})) {
          foreach ($entity->{$field_name}['und'] as $i => $val) {
            $form[$field_name]['und']['#default_value'][] = $val['value'];
          }
        }
      }
    }
  }
}