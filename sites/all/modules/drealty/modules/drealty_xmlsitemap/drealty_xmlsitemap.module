<?php
/**
 * @file
 * Integrate Drealty with XML sitemap
 */

/**
 * Implements hook_entity_info_alter().
 */
function drealty_xmlsitemap_entity_info_alter(array &$entity_info) {
  $entity_info['drealty_listing']['bundle label'] = $entity_info['drealty_listing']['label'];
  $entity_info['drealty_listing']['xmlsitemap'] = array(
    'process callback' => 'drealty_xmlsitemap_drealty_process_links',
  );
}

/**
 * Implements hook_cron().
 */
function drealty_xmlsitemap_cron() {
  drealty_xmlsitemap_xmlsitemap_index_links(xmlsitemap_var('batch_limit'));
}

/**
 * Implements hook_xmlsitemap_index_links().
 */
function drealty_xmlsitemap_xmlsitemap_index_links($limit) {
  if ($types = xmlsitemap_get_link_type_enabled_bundles('drealty_listing')) {
    $pids = db_query_range("SELECT p.id FROM {drealty_listing} p LEFT JOIN {xmlsitemap} x ON x.type = 'drealty_listing' AND p.id = x.id WHERE x.id IS NULL AND p.active = 1 AND p.type IN (:types) ORDER BY p.id DESC", 0, $limit, array(':types' => $types))->fetchCol();
    drealty_xmlsitemap_drealty_process_links($pids);
  }
}

/**
 * Process drealty sitemap links.
 *
 * @param $pids
 *   An array of drealty listing IDs.
 */
function drealty_xmlsitemap_drealty_process_links(array $pids) {
  $entities = entity_load('drealty_listing', $pids);
  foreach ($entities as $entity) {
    $link = drealty_xmlsitemap_create_link($entity);
    xmlsitemap_link_save($link);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function drealty_xmlsitemap_form_drealty_listing_type_form_alter(array &$form, array &$form_state) {
  $drealty_listing_type = isset($form_state['drealty_listing_type']->type) ? $form_state['drealty_listing_type']->type : '';
  module_load_include('inc', 'xmlsitemap', 'xmlsitemap.admin');
  xmlsitemap_add_link_bundle_settings($form, $form_state, 'drealty_listing', $drealty_listing_type);
}

/**
 * Implements hook_entity_insert().
 */
function drealty_xmlsitemap_entity_insert($entity, $type) {
  if($type == 'drealty_listing'){
    drealty_xmlsitemap_entity_update($entity, $type);
  }
}

/**
 * Implements hook_entity_update().
 */
function drealty_xmlsitemap_entity_update($entity, $type) {
  if($type == 'drealty_listing'){
    $link = drealty_xmlsitemap_create_link($entity);
    xmlsitemap_link_save($link);
  }
}

/**
 * Implements hook_entity_delete().
 */
function drealty_xmlsitemap_entity_delete($entity, $type) {
  if ($type == 'drealty_listing'){
    xmlsitemap_link_delete('drealty_listing', $entity->id);
  }
}

/**
 * Create a sitemap link from a drealty listing.
 *
 * @param $entity
 *   A drealty listing object.
 *
 * @return array
 */
function drealty_xmlsitemap_create_link($entity) {
  if (!isset($entity->xmlsitemap)) {
    $entity->xmlsitemap = array();
    if ($entity->id && $link = xmlsitemap_link_load('drealty_listing', $entity->id)) {
      $entity->xmlsitemap = $link;
    }
  }

  $settings = xmlsitemap_link_bundle_load('drealty_listing', $entity->type);
  $uri = entity_uri('drealty_listing', $entity);

  $entity->xmlsitemap += array(
    'id' => $entity->id,
    'type' => 'drealty_listing',
    'subtype' => $entity->type,
    'status' => $settings['status'],
    'status_default' => $settings['status'],
    'status_override' => 0,
    'priority' => $settings['priority'],
    'priority_default' => $settings['priority'],
    'priority_override' => 0,
  );

  $entity->xmlsitemap['loc'] = $uri['path'];
  $entity->xmlsitemap['access'] = 1;
  $entity->xmlsitemap['language'] = isset($entity->language) ? $entity->language : LANGUAGE_NONE;
  $entity->xmlsitemap['lastmod'] = $entity->changed;

  return $entity->xmlsitemap;
}