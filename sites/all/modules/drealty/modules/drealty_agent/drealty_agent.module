<?php

function drealty_agent_entity_info() {
  $entities = array();
  $entities['drealty_agent'] = array(
    'label' => t('Drealty Agent'),
    'plural label' => t('Drealty Agents'),
    'entity class' => 'DrealtyAgent',
    'controller class' => 'DrealtyAgentController',
    'base table' => 'drealty_agent',
    'uri callback' => 'entity_class_uri',
    'fieldable' => TRUE,
    'view modes' => array(
      'full' => array(
        'label' => 'Full View',
        'custom settings' => FALSE,
      ),
      'search' => array(
        'label' => 'Search View',
        'custom settings' => TRUE,
      ),
      'list' => array(
        'label' => 'List View',
        'custom settings' => TRUE,
      ),
      'gallery' => array(
        'label' => 'Gallery View',
        'custom settings' => TRUE,
      ),
    ),
    'entity keys' => array(
      'id' => 'id',
      'label' => 'label',
      'bundle' => 'type',
    ),
    'admin ui' => array(
      'path' => 'admin/content/drealty_agent',
      'file' => 'includes/drealty.agent.admin.inc',
      'controller class' => 'DrealtyAgentUIController',
      'menu_wildcard' => '%drealty_agent',
    ),
    'module' => 'drealty_agent',
    'access callback' => 'drealty_agent_access',
    'bundles' => array(),
    'bundle keys' => array(
      'bundle' => 'type',
    ),
  );

  $entities['drealty_agent_type'] = array(
    'label' => t('Drealty Agent Type'),
    'entity class' => 'DrealtyAgentType',
    'controller class' => 'DrealtyAgentTypeController',
    'base table' => 'drealty_agent_type',
    'fieldable' => FALSE,
    'bundle of' => 'drealty_agent',
    'exportable' => TRUE,
    'entity keys' => array(
      'id' => 'id',
      'name' => 'type',
      'label' => 'label',
    ),
    'access callback' => 'drealty_agent_type_access',
    'module' => 'drealty',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/drealty/drealty_agent',
      'file' => 'modules/drealty_agent/includes/drealty.agent.admin.inc',
      'controller class' => 'DrealtyAgentTypeUIController',
    ),
  );
  
  return $entities;
}

function drealty_agent_entity_info_alter(&$entity_info) {
  $types = drealty_agent_get_types();
  foreach ($types as $type => $info) {
    $entity_info['drealty_agent']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/drealty/drealty_agent/manage/%drealty_agent_type',
        'real path' => 'admin/drealty/drealty_agent/manage/' . $type,
        'bundle argument' => 4,
        'access arguments' => array('administer drealty_agent'),
      ),
    );
  }
}

function drealty_agent_get_types($type_name = NULL) {
  $types = entity_load_multiple_by_name('drealty_agent_type', isset($type_name) ? array($type_name) : FALSE);
  return isset($type_name) ? reset($types) : $types;
}

/**
 * Menu argument loader; Load a drealty listing type by string.
 *
 * @param string $type
 *  The machine-readable name of a listing type to load.
 * @return
 *  A listing type array or FALSE if $type does not exist.
 */
function drealty_agent_type_load($type) {
  return drealty_agent_get_types($type);
}

function drealty_agent_create($values = array()) {
  return entity_get_controller('drealty_agent')->create($values);
}

/**
 * Fetch an agent object.
 *
 * @param $id
 *   Integer specifying the entity id.
 * @param $reset
 *   A boolean indicating that the internal cache should be reset.
 * @return
 *   A fully-loaded entity object or FALSE if it cannot be loaded.
 *
 * @see drealty_listing_load_multiple()
 */
function drealty_agent_load($id, $reset = FALSE) {
  $agents = drealty_agent_load_multiple(array($id), array(), $reset);
  return reset($agents);
}

/**
 * Load multiple profiles based on certain conditions.
 *
 * @param $ids
 *   An array of drealty_listing IDs.
 * @param $conditions
 *   An array of conditions to match against the {drealty_listing} table.
 * @param $reset
 *   A boolean indicating that the internal cache should be reset.
 * @return
 *   An array of drealty_listing objects, indexed by pid.
 *
 * @see entity_load()
 * @see drealty_listing_load()
 */
function drealty_agent_load_multiple($ids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('drealty_agent', $ids, $conditions, $reset);
}

function drealty_agent_view($listing, $view_mode = 'full', $langcode = NULL, $page = NULL) {
  return entity_get_controller('drealty_agent')->view(array($listing), $view_mode, $langcode, $page);
}

function drealty_agent_access($op, $agent = NULL, $account = NULL) {
  if (user_access('administer drealty_agent', $account)) {
    return TRUE;
  }

  if ($op == 'create' || $op == 'update') {
    $op = 'edit';
  }

  $access = module_invoke_all('drealty_agent_access', $op, $agent, $account);

  // Only grant access if at least one module granted access and no one denied
  // access.
  if (in_array(FALSE, $access, TRUE)) {
    return FALSE;
  } elseif (in_array(TRUE, $access, TRUE)) {
    return TRUE;
  }
  return FALSE;
}

function drealty_agent_type_access() {
  return TRUE;
}