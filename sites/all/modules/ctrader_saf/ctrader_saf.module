<?php


/**
 * Implements hook_init().
 */
function ctrader_saf_init() {

}


/**
 * Implements hook_form_alter().
 */
function ctrader_saf_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'views_exposed_form' && $form['#id'] == 'views-exposed-form-condo-search-page-block-1') {
    $form['sort_bef_combine']['#default_value'] = '';
  }
}


/**
 * Implements hook_search_api_solr_query_alter().
 */
function ctrader_saf_search_api_solr_query_alter(array &$call_args, SearchApiQueryInterface $query) {
  $facet_item = $query->getFilter()->getFilters();
  if (!empty($facet_item) && isset($facet_item[0]) && is_object($facet_item[0])) {
    $facet_item = $facet_item[0]->getFilters();
    if (!empty($facet_item[0]) && is_array($facet_item[0]) && $facet_item[0][0] == 'field_locker__torcond') {
      if (!empty($facet_item[0][1])) {
        $facet_item = $facet_item[0][1];
        if ($facet_item !== 'none') {
          $call_args['params']['fq'][0] = '{!tag=facet:field_locker__torcond}((tm_field_locker__torcond:(ensuiteown)) OR (tm_field_locker__torcond:(ensuite\+exclus)) OR (tm_field_locker__torcond:(common)) OR (tm_field_locker__torcond:(ensuiteexclus)) OR (tm_field_locker__torcond:(own)) OR (tm_field_locker__torcond:(exclus)) OR (tm_field_locker__torcond:(ensuite\+own)) OR (tm_field_locker__torcond:(ensuit)))';
        }
      }
    }

    // Changes query for 'lease' like 'all minus sale' (because of 'leas' query unknown solr error).
    if (!empty($facet_item[0]) && is_array($facet_item[0]) && $facet_item[0][0] == 'field_s_r__torcond') {
      if (!empty($facet_item[0][1])) {
        $leas_query_needs_to_replace = 'tm_field_s_r__torcond:(leas)';
        $leas_fixed_query = '*:* AND -(tm_field_s_r__torcond:(sale))';
        foreach ($call_args['params']['fq'] as $key => $value) {
          if (strrpos($value, $leas_query_needs_to_replace) !== FALSE) {
            $call_args['params']['fq'][$key] = str_replace($leas_query_needs_to_replace, $leas_fixed_query, $call_args['params']['fq'][$key]);
          }
        }
        //  {!tag=facet:field_s_r__torcond}*:* AND -(tm_field_s_r__torcond:(sale))
        //  {!tag=facet:field_s_r__torcond}((tm_field_s_r__torcond:(leas)) OR (tm_field_s_r__torcond:(sale)))
      }
    }
  }
}


/**
 * Implements hook_facet_items_alter().
 */
function ctrader_saf_facet_items_alter(&$build, &$settings) {
  if ($settings->facet == "field_locker__torcond") {
    $replace_this_facet = 'own';
    $replaced_facet_count_number = 0;
    foreach ($build as $key => $item) {
      switch ($key) {
        case $replace_this_facet:
          $build[$replace_this_facet]["#markup"] = t('Require Locker');
          $build[$replace_this_facet]['#indexed_value'] = t('Require Locker');
          break;
        // Remove this facet item.
        default:
          unset($build[$key]);
          break;
      }
      if ($key != 'none' && strrpos($key, '+') === FALSE) {
        $replaced_facet_count_number += isset($item['#count']) ? $item['#count'] : 0;
      }
    }
    $build[$replace_this_facet]['#count'] = $replaced_facet_count_number;
  }

  if ($settings->facet == "field_pets__torcond") {
    $replace_this_facet = '!';
    $replaced_facet_count_number = 0;
    foreach ($build as $key => $item) {
      switch ($key) {
        case $replace_this_facet:
          $build[$replace_this_facet]["#markup"] = t('Pets Allowed');
          break;
        // Remove this facet item.
        case 'restrict':
          unset($build[$key]);
          break;
        default;
      }
      if ($key != 'none' && strrpos($key, '+') === FALSE) {
        $replaced_facet_count_number += isset($item['#count']) ? $item['#count'] : 0;
      }
    }
  }

  if ($settings->facet == "field_br__torcond") {
    $adapter = facetapi_adapter_load($settings->searcher);
    $facet = facetapi_facet_load($settings->facet, $settings->searcher);
    $items = $adapter->getActiveItems($facet);
    $item_values = array();
    foreach ($items as $item) {
      $item_values[] = $item['value'];
    }
    $is_all_link_active = count($items) == 0;
    $all_link_path = $adapter->getFacetPath($facet, $item_values, TRUE);
    $all_link_query = $adapter->getQueryString($facet, $item_values, TRUE);
    $build['any'] = array(
      '#markup' => t('Any'),
      '#path' => $all_link_path,
      '#html' => FALSE,
      '#count' => NULL,
      '#indexed_value' => 0,
      '#active' => $is_all_link_active,
      '#item_parents' => array(),
      '#item_children' => array(),
      '#query' => $all_link_query,
    );
  }
}


/**
 * Implements hook_current_search_items().
 */
function ctrader_saf_current_search_items() {

}
