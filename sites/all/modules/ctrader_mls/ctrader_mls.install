<?php

/**
 * @file
 * Install, update, and uninstall functions for the ctrader_mls module.
 */

/**
 * Implementation of hook_install
 */
function ctrader_mls_install() {
  $schema = drupal_get_schema_unprocessed('system', 'cache');
  $schema['description'] = "Cache table used to store drealty_listing entity records.";

  db_create_table('cache_entity_drealty_listing', $schema);
}

/**
 * Implements hook_requirements().
 */
function ctrader_mls_requirements($phase) {
  $requirements = array();
  $t = get_t();

  // Verify the Leaflet library is installed correctly.
  if (in_array($phase, array('runtime', 'update'))) {
    $library = libraries_detect('torontomlsapi');
    $requirements['torontomlsapi'] = array(
      'title' => $t('Torontomlsapi'),
    );

    if ($library['installed']) {
      $requirements['torontomlsapi'] += array(
        'value' => $library['version'],
        'description' => t('The Torontomlsapi library is installed correctly. RETS functionality available.'),
        'severity' => REQUIREMENT_OK,
      );
    }
    else {
      $requirements['torontomlsapi'] += array(
        'value' => $library['error'],
        'description' => $library['error message'],
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }

  return $requirements;
}


/**
 * Delete all buildings.
 */
function ctrader_mls_update_7001(&$sandbox) {
  $listings_per_pass = 10;
  if (!isset($sandbox['progress'])) {
    $sandbox['progress'] = 0;
    $sandbox['current_id'] = 0;
    $sandbox['max'] = db_select('drealty_listing', 'dl')
      ->fields('dl', array('id'))
      ->condition('type', 'toronto_building')
      ->execute()
      ->rowCount();
  }

  $records = db_select('drealty_listing', 'dl')
    ->fields('dl', array('id'))
    ->condition('id', $sandbox['current_id'], '>')
    ->condition('type', 'toronto_building')
    ->range(0, $listings_per_pass)
    ->orderBy('id')
    ->execute()
    ->fetchCol();

  if (!empty($records)) {
    $entities = entity_load(DREALTY_ENTITY_TYPE, array($records));
    foreach ($entities as $entity) {
      $entity->delete();
    }
    $sandbox['current_id'] = end($records);
    $sandbox['progress'] += count($records);
    $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
    if ($sandbox['#finished'] >= 1) {
      $sandbox['#finished'] = 1;
    }
  }

  // To display a message to the user when the update is completed, return it.
  return t('Changed taxonomy field value for every drealty_listing entity type.');

  // In case of an error, simply throw an exception with an error message.
  throw new DrupalUpdateException('Something went wrong.');
}

/**
 * Creates table for drealty_listing entities caching.
 */
function ctrader_mls_update_7002() {
  $schema = drupal_get_schema_unprocessed('system', 'cache');
  $schema['description'] = "Cache table used to store drealty_listing entity records.";

  db_create_table('cache_entity_drealty_listing', $schema);
  return t('Created table for drealty_listing entities caching.');
}

/**
 * Deletes main menu links below 'Condos for Sale' and 'Condos for Rent'.
 */
function ctrader_mls_update_7003(&$sandbox) {
  $items_per_pass = 10;
  if (!isset($sandbox['mlids'])) {
    $menu = menu_build_tree('main-menu');
    $menu_links = array();
    foreach ($menu as $key => $value) {
      if (strpos($key, 'Condos for Sale') !== FALSE || strpos($key, 'Condos for Rent') !== FALSE) {
        if (!empty($value['below'])) {
          $menu_links += $value['below'];
        }
      }
    }
    $menu_links += ctrader_mls_update_7003_below_to_array($menu_links);
    $mlids = array();
    foreach ($menu_links as $value) {
      $mlids[] = $value['link']['mlid'];
    }
    sort($mlids);
    $sandbox['mlids'] = $mlids;
    $sandbox['progress'] = 0;
    $sandbox['current'] = 0;
    $sandbox['max'] = count($mlids);
  }
  for ($i = 0; $i < $items_per_pass; $i++) {
    menu_link_delete(array_pop($sandbox['mlids']));
  }
  $sandbox['progress'] += $items_per_pass;
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['max'];
  if ($sandbox['#finished'] >= 1) {
    $sandbox['#finished'] = 1;
  }

  return t('Deleted main menu links below \'Condos for Sale\' and \'Condos for Rent\'.');
  throw new DrupalUpdateException('Something went wrong.');
}

/**
 * Needs for ctrader_mls_update_7003
 *
 * @param $below
 * @return array
 */
function ctrader_mls_update_7003_below_to_array($below) {
  $links = array();
  foreach ($below as $value) {
    if (!empty($value['below'])) {
      $links += $value['below'];
    }
  }
  $reset_links = reset($links);
  if (!empty($reset_links['below'])) {
    $links += ctrader_mls_update_7003_below_to_array($links);
  }
  return $links;
}
